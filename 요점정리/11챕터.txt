부모프로세스와 자식 프로세스는 메모리를 공유 하지 않는다.

그렇다면 서로 데이터의 송수신은 어떻게 할까 ?  

답은 운영체제가 제시한다.  별도의 메모리 공간을 만들어 

부모도 자식도 접근 할 수 있게하여 데이터 송수신을 가능하게 한다.




pipe 함수를 사용해서 할 수 있다.

int pipe(int filesed[2])
0번 배열은 데이터를 수신할때 사용 되는 디스크립타
1번 배열은 송신할때 사용 되는 디스크립터

파이프함수를 호출하면 운영체제가 파이프라는 메모리 공간을 만들고 이 공간에 사용 되는
디스크립터를 반환함.



부모프로세스는 자식프로세스를 생서하기전에 운영체제에 말한다.
자식프로세스를 만들건데 공유 할 수 있는 메모리를 만들어 달라.(시기)
그 메모리 공간을 파이프라고 하는데 파이프는 두개의 파일디크스팁터를 필요로 한다.
운영체제는 부모프로세스에게 파이프만 만드는게 아닌 통신에 필요한 디스크립터도 줌.

 
포크로 자식프로세스가 생성되면 자식프로세서도 그 디스크립터를 가지기 때문에 파이프에서 데이터 통신이 가능함.


파이프는 근데 본인이 쓰고 본인이 뺴는것도 가능 하기 때문에 
파이프 하나만 가지고 양방향으로 데이터를 송수힌 하는건 쉽지 않다.

부모프로세스가 라이트한걸 자식이 리드하게 하고 자식이 라이트한걸 부모가 리드 하고 싶은데

코드상에서 어느쪽이 먼저 가져가게 조절하려면 슬립 함수를 써야 하는데 이건 매우 위험한 방법이다.

답은 파이프를 두개 생성해서 

자식에서 부모로의 전송은 파이프1로 그 반대는 파이프 2로 하게 구성하면 된다.








