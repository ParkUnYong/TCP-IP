멀티캐스트

멀티캐스트 방식의 데이터 전송은 UDP를 기반으로 하며 UDP 서버/클라이언트 방식과 매우 유사하다.
차이점이 있다면 UDP에서의 데이터 전송은 하나의 목적지를 두고 이뤄지지만 멀티캐스트에서의 데이터 전송은
특정그룹에 가입(등록) 되어 있는 다수의 호스트가 된다는점. 즉 멀티캐스트 방식을 이용하면 단 한번에 데이터 전송으로 다수의 호스트에게 데이터를 전송 할 수 있다.

멀티캐스트의 데이터 전송방식과 멀티캐스트 트래픽 이점

- 멀티캐스트 서버는 특정 멀티 캐스트 그룹을 대상으로 데이터를 딱 한번 전송한다.
- 딱 한번 전송하더라도 그룹에 속하는 클라이언트는 모두 데이터를 수신한다.
- 멀티캐스트 그룹의 수는 IP주소범위내에서 얼마든지 추가가 가능하다.
- 특정 멀티캐스트 그룹으로 전송되는 데이터를 수신하려면 해당 그룹에 가입 하면 된다.


한번 데이터를 전송해서 둘 이상의 클라에 데이터를 제공한다는 큰 틀은 멀티캐스트와 브로드 캐스트는 같다.

멀티캐스트를 위해선 멀티캐스트 어드레스를 써야함. ipv4에 멀티캐스트를 위해 할당된 IP주소가 있음.(4바이트)

멀티캐스트 IP를 이용해서 멀티캐스트를 함. 멀티캐스트 IP를 A.B.C.D라 가정하면 여러개의 호스트는 
A.B.C.D에 가입이라는 절차를 거쳐야함. (여기서 수신하겠다) 

가입이 된 순간부터 A.B.C.D의 데이터가 각각의 호스트에 전송됨.

데이터를 보내는걸 센더라고 부르고 수신하는쪽을 리시버라 부름.

그런데 이 둘은 연결관계가 아님. 이 말이 무엇이냐면 A.B.C.D에 가입된 호스트가 없더라고 

센더는 데이터를 보내고 있음. (이 경우 아무도 수신하지 않음) 첫 호스트가 가입이 되면

이전에 보냈던 모든걸 다 수신하는게 아니고 가입된 이후부터 센더가 전달하는 데이터를 수신함.
(마치 라디오 같이)

연결의 개념이 없기에 UDP기반으로 데이터를 송수신함.

TCP로 가정하면
만약 호스트가 1000개고 이 1000개의 클라이언트가 하나의 라우터에 연결되어 있음.
TCP는 연결의 개념이라 하나하나에 다 전송해야함. 

하지만 멀티캐스트는 서버가 데이터를 라우터에 주면 라우터가 그 데이터를 복사해서 각각의 호스트에 
전달함. 즉 한번만 전송하면 라우터에서 번져가는 방식. 네트워크에 흘러가는 데이터의 양만하더라도 비교 할 수 없다.

보내진 패킷이 지워지지 않으면 거대한 인터넷이라는게 유지되기 힘듬. 그래서 있는게 TTL

TTL 
- 패킷을 얼마나 멀리 보낼것인가 결정하는 요소
- TTL은 정수로 표현되며 라우터 하나를 보낼때 마다 1씩 감소 (첫 라우터때 3이었다면 둘쨰 라우터때 2로 감소)
- TTL이 0이 되면 패킷은 소멸 


TTL을 너무 크게 설정한다면 네트워크 트래픽에 좋지 않은 영향을 줄 수 있고 너무 적게 설정해도 목적지에 도달하지 않는 문제가 발생 할 수 있다.

멀티캐스트할때 고려 해야 할 것

적당한 TTL을 설정하는것 보통 두자릿수로 설정함. (일반적으로 64를 설정함. 실험결과를 통해 얼마든지 증감가능) 

int send_sock;
int time_live=64;

setsockopt(send_sock,IPPROTO_IP,IP_MULTICAST_TTL,(void*)&time_live,sizeof(time_live);

TTL의 설정과 관련된 프로토콜의 레벨은IPPROTO_IP 이고 옵션이름은 IP_MULTICAST_TTL이다.
그리고 저기 보이드형 타임라이브는 저위에 타임라이브 64라고 설정되어 있는 변수 이름의 주소 값을 넣어주면 됨
(64로 설정하겠다는 의미) 이 문장으로 인해 이 소켓으로 인해 전달되는 모든 TTL은 64가 되는것.


그룹가입 방법 
1. 가입용 소켓 생성 
2.ip_mreq 구조체 변수 (멀티캐스트 관련된 정보를  담을 수 있음)

struct ip_mreq
{
  struct in_addr imr_multiaddr // 가입할 멀티캐스트 그룹의 주소 정보
  struct in_addr imr_interface // 그룹에 가입할 호스트의 주소 정보를 담음.
}


setsockopt(recv_sock,IPPROTO_IP,IP_ADD_MEMBERSHIP,(void*)&join_adr,sizeof(join_adr);
가입 옵션은 IP_ADD_MEMBERSHOP로 함. 




샌더에서 멀티캐스트 주소 정보를 세팅함. 
리시버에선 가입절차를 거침. 가입하는 순간부터 데이터를 수신함으로 그 이전에 송신한 데이터는 수신 불가

===============================================================================================

브로드 캐스트 

멀티캐스트라는건 다수에게 전달이 된다는 의미.

이 다수를 물리적으로 제한을 하지 않음.

한국에서 멀티캐스트를 한다고 해도 다른국가로도 전달이 가능함.

그에따른 소프트웨어 구성을 해야함.

브로드 캐스트는 방송과 비슷함. 한국에서 하는 방송은 한국에서만 볼 수 있게.

물리적으로 하나의 네트워크로 연결되어 있는 해당 집단 내의 데이터 전송을 위한것.


브로드캐스트 

- 동일한 네트워크 내에 존재하는 호스트에 데이터를 전송하는 방법
-데이터의 전송대상이 호스트가 아닌 네트워크
- 멀티캐스트와 마찬가지고 UDP기반(연결의 개념 없음)
-IP에서 네트워크 주소를 제외한 호스트 주소를 모두 1로해서 전송하면, 해당 네트워크로 데이터가 전송된다.
ㄴDirect 브로드 캐스트 
211.218.XX.XX 에서 XX.XX가 호스트 주소면 저것의 비트를 모두 1로해서 
즉 255.255로 해서 전달을 하면 해당 네트워크의 모든 호스트에 전달.

- 255.255.255.255로 데이터를 전송하면 전송한 호스트가 속한 네트워크로 데이터가 전송된다.
ㄴLocal 브로드 캐스트
내가 속해있는 네트워크에 내가 데이터를 브로드 캐스트 하겠다 할때 쓰는것.
255.255.255.255로 세팅.

setsockopt의 옵션을 SO_BROADCAST로 바꿔줘야함.
                   (기본적으로 0임.) 

int bro =1; 이렇게하고 

setsockopt(소켓이름,SOL_SOCKET,SO_BROADCAST,(void*)&bcast,sizeof(bcast));

위에서 보이드형으로 형변환하여 들어가는 bcast에 들어있는 값으로 SO_BROADCAST로 들어가 
브로드 캐스트 가능하게 함.

윈도우 기반에서는

IP_MULTICAST TTL과 ip_mreq의 사용을 위해서 헤더파일 ws2tcpip.h를 추가하는것 외에 차이가 없음.










